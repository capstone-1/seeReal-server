package com.seereal.algi.config.auth;import com.seereal.algi.model.user.Role;import lombok.RequiredArgsConstructor;import org.springframework.context.annotation.Configuration;import org.springframework.security.config.annotation.web.builders.HttpSecurity;import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;@RequiredArgsConstructor@EnableWebSecurity@Configurationpublic class SecurityConfig extends WebSecurityConfigurerAdapter {    private final CustomOAuth2UserService customOAuth2UserService;    @Override    protected void configure(HttpSecurity http) throws Exception {        http                .csrf().disable()                .headers().frameOptions().disable()                .and()                    .authorizeRequests()                    .antMatchers("/", "/css/**", "/images/**",                            "/js/**", "/h2/**", "/organization/**")                        .permitAll()                    .antMatchers("/upload/**")                        .hasRole(Role.AGENCY.name())                    .antMatchers("/test/**")                        .hasRole(Role.GUEST.name())                    .anyRequest()                        .authenticated()                .and()                    .logout()                        .logoutSuccessUrl("/")                .and()                    .oauth2Login()                        .userInfoEndpoint()// 로그인 씬 성공 이후 설정                            .userService(customOAuth2UserService); // UserService 인터페이스 구현체 등록    }}